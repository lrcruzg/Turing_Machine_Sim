#	Copy function

# Input: Tape with some (contiguous) '1's, 
# (The function) leaves the tape with the same '1's at the end 
# leaves a blanc ('B'), and then writes the same amount of '1's

initial_state: q_1
final_state: q_0

# The '1's are transformed into to a 'i'
q_1, 1 - q_1, i, r

# records (using q_2) that every (initial) '1' is now an 'i'
q_1, B - q_2, B, d

# traverse the copied '1's
q_2, 1 - q_2, 1, l

# records the first space
q_2, B - q_3, B, l 

# replace the first 'i' for a '1'
q_3, i - q_4, 1, r

# ignore the copied '1's (the original '1's)
q_3, 1 - q_3, 1, l

# if there aren't '1's to copy, end
q_3, B - q_0, B, r

# ignore the (new) copied '1's
q_4, 1 - q_4, 1, r

# records the blanc space between the original and new '1's
q_4, B - q_5, B, r

q_5, 1 - q_5, 1, r

q_5, B - q_2, 1, l